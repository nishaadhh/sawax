<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <title>SAWAX | User Profile</title>
    <style>
        :root {
            --primary: #0f172a;
            --primary-light: #1e293b;
            --secondary: #f8fafc;
            --accent: #3b82f6;
            --accent-dark: #1d4ed8;
            --accent-light: #dbeafe;
            --text: #1e293b;
            --text-light: #64748b;
            --text-muted: #94a3b8;
            --border: #e2e8f0;
            --border-light: #f1f5f9;
            --success: #10b981;
            --success-light: #d1fae5;
            --error: #ef4444;
            --error-light: #fecaca;
            --warning: #f59e0b;
            --warning-light: #fef3c7;
            --gradient-primary: linear-gradient(135deg, #d4a017 0%, #000000 100%);
            --gradient-accent: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            --gradient-success: linear-gradient(135deg, #10b981 0%, #059669 100%);
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
            --radius-sm: 6px;
            --radius-md: 12px;
            --radius-lg: 16px;
            --radius-xl: 24px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            color: var(--text);
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Enhanced Container */
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 24px;
        }

        /* Header Styling */
        header {
            background: rgba(15, 23, 42, 0.95);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(59, 130, 246, 0.2);
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: var(--shadow-lg);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
        }

        nav ul {
            display: flex;
            list-style: none;
            gap: 32px;
        }

        nav ul li a {
            font-weight: 500;
            font-size: 15px;
            color: white;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            padding: 8px 0;
        }

        nav ul li a:hover {
            color: var(--accent);
            transform: translateY(-1px);
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--gradient-accent);
            transition: width 0.3s ease;
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        .header-icons {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .header-icon {
            cursor: pointer;
            font-size: 18px;
            color: white;
            transition: all 0.3s ease;
            padding: 8px;
            border-radius: var(--radius-sm);
        }

        .header-icon:hover {
            color: var(--accent);
            background: rgba(59, 130, 246, 0.1);
            transform: scale(1.05);
        }

        /* Enhanced Profile Section */
        .profile {
            padding: 40px 0 80px;
            min-height: calc(100vh - 200px);
        }

        .section-title {
            text-align: center;
            margin-bottom: 48px;
            animation: fadeInUp 0.6s ease;
        }

        .section-title h2 {
            font-size: 42px;
            font-weight: 800;
            margin-bottom: 16px;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            letter-spacing: -1px;
        }

        .section-title p {
            color: var(--text-light);
            font-size: 18px;
            max-width: 600px;
            margin: 0 auto;
            font-weight: 400;
            line-height: 1.7;
        }

        /* Enhanced Profile Layout */
        .profile-content {
            display: grid;
            grid-template-columns: 380px 1fr;
            gap: 32px;
            align-items: start;
            animation: fadeIn 0.8s ease;
        }

        /* Premium Sidebar */
        .profile-sidebar {
            background: white;
            border-radius: var(--radius-xl);
            padding: 32px 0;
            box-shadow: var(--shadow-xl);
            border: 1px solid var(--border-light);
            position: sticky;
            top: 120px;
            overflow: hidden;
        }

        .profile-sidebar h3 {
            font-size: 20px;
            font-weight: 700;
            margin-bottom: 24px;
            padding: 0 32px;
            color: var(--text);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .profile-sidebar h3 i {
            color: var(--accent);
            font-size: 18px;
        }

        .sidebar-menu {
            list-style: none;
        }

        .sidebar-menu li {
            margin: 0;
        }

        .sidebar-menu li a {
            display: flex;
            align-items: center;
            gap: 16px;
            font-size: 15px;
            color: var(--text-light);
            padding: 16px 32px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            text-decoration: none;
            border-left: 3px solid transparent;
            position: relative;
        }

        .sidebar-menu li a:hover,
        .sidebar-menu li a.active {
            background: linear-gradient(135deg, #d4a017, #e7c156);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 8px 20px rgba(212, 160, 23, 0.3);
        }

        .sidebar-menu li a i {
            width: 20px;
            text-align: center;
            font-size: 16px;
            transition: transform 0.3s ease;
        }

        .sidebar-menu li a:hover i {
            transform: scale(1.1);
        }

        /* Premium Main Profile Area */
        .profile-main {
            background: white;
            border-radius: var(--radius-xl);
            overflow: hidden;
            box-shadow: var(--shadow-xl);
            border: 1px solid var(--border-light);
            animation: slideInUp 0.6s ease;
        }

        /* Enhanced Profile Header */
        .profile-header {
            background: var(--gradient-primary);
            padding: 48px 40px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .profile-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="8" height="8" patternUnits="userSpaceOnUse"><path d="M 8 0 L 0 0 0 8" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.4;
        }

        .profile-image-container {
            position: relative;
            display: inline-block;
            margin-bottom: 24px;
        }

        .profile-image {
            width: 160px;
            height: 160px;
            border-radius: 50%;
            border: 6px solid white;
            box-shadow: var(--shadow-xl);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            z-index: 2;
            overflow: hidden;
            background: white;
        }

        .profile-image:hover {
            transform: scale(1.05);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
        }

        .profile-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .default-profile-image {
            width: 100%;
            height: 100%;
            background: #d4a017;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 54px;
            font-weight: 800;
            text-transform: uppercase;
            border-radius: 50%;
        }

        /* Enhanced Upload Controls */
        .image-upload-overlay {
            position: absolute;
            bottom: 4px;
            right: 2px;
            background:transparent;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 3;
            /* border: 2px solid rgb(0, 0, 0); */
            box-shadow: var(--shadow-md);
        }

        .image-upload-overlay:hover {
            transform: scale(1.1);
            box-shadow: var(--shadow-lg);
        }

        .image-upload-overlay i {
            color: white;
            font-size: 16px;
        }

        .image-remove-overlay {
            position: absolute;
            top: 0px;
            right: 0px;
            background: transparent;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 3;
            /* border: 3px solid white; */
            opacity: 0;
            transform: scale(0.8);
            box-shadow: var(--shadow-md);
        }

        .profile-image-container:hover .image-remove-overlay {
            opacity: 1;
            transform: scale(1);
        }

        .image-remove-overlay:hover {
            transform: scale(1.1);
            box-shadow: var(--shadow-lg);
        }

        .image-remove-overlay i {
            color: white;
            font-size: 15px;
        }

        .user-info h3 {
            color: white;
            font-size: 32px;
            font-weight: 800;
            margin-bottom: 8px;
            position: relative;
            z-index: 2;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .user-email {
            color: rgba(255, 255, 255, 0.9);
            font-size: 16px;
            font-weight: 400;
            position: relative;
            z-index: 2;
            opacity: 0.9;
        }

        /* Enhanced Form Section */
        .profile-body {
            padding: 48px 40px;
        }

        .profile-form h3 {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 32px;
            color: var(--text);
            display: flex;
            align-items: center;
            gap: 12px;
            padding-bottom: 16px;
            border-bottom: 2px solid var(--border-light);
        }

        .profile-form h3 i {
            color: var(--accent);
            font-size: 20px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 24px;
        }

        .form-group {
            position: relative;
        }

        .form-group label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
            color: var(--text);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-group input {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid var(--border);
            border-radius: var(--radius-md);
            font-size: 16px;
            background: var(--secondary);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 500;
            font-family: inherit;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--accent);
            background: white;
            box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
            transform: translateY(-1px);
        }

        .form-group input:valid {
            border-color: var(--success);
        }

        .form-group input:invalid:not(:placeholder-shown) {
            border-color: var(--error);
        }

        .form-group input:read-only {
            background: var(--border-light);
            color: var(--text-muted);
            cursor: not-allowed;
        }

        /* Username Validation */
        .username-group {
            position: relative;
        }

        .username-feedback {
            position: absolute;
            right: 16px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .username-feedback.checking {
            opacity: 1;
            color: var(--warning);
            animation: spin 1s linear infinite;
        }

        .username-feedback.available {
            opacity: 1;
            color: var(--success);
        }

        .username-feedback.taken {
            opacity: 1;
            color: var(--error);
        }

        @keyframes spin {
            from { transform: translateY(-50%) rotate(0deg); }
            to { transform: translateY(-50%) rotate(360deg); }
        }

        .username-message {
            font-size: 13px;
            margin-top: 8px;
            font-weight: 500;
            opacity: 0;
            transition: opacity 0.3s ease;
            padding: 8px 12px;
            border-radius: var(--radius-sm);
        }

        .username-message.show {
            opacity: 1;
        }

        .username-message.available {
            color: var(--success);
            background: var(--success-light);
        }

        .username-message.taken {
            color: var(--error);
            background: var(--error-light);
        }

        /* Premium Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            padding: 14px 28px;
            background: var(--gradient-accent);
            color: white;
            font-weight: 600;
            border-radius: var(--radius-md);
            border: none;
            cursor: pointer;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 13px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: var(--shadow-md);
            text-decoration: none;
            font-family: inherit;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-secondary {
            background: transparent;
            color: var(--accent);
            border: 2px solid var(--accent);
            margin-left: 12px;
        }

        .btn-secondary:hover {
            background: var(--accent);
            color: white;
        }

        /* Disabled button styles for Google Sign-In users */
        .btn-disabled {
            background: var(--text-muted) !important;
            color: white !important;
            cursor: not-allowed !important;
            opacity: 0.6;
            border-color: var(--text-muted) !important;
        }

        .btn-disabled:hover {
            transform: none !important;
            box-shadow: var(--shadow-md) !important;
            background: var(--text-muted) !important;
        }

        .action-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            margin-top: 32px;
            padding-top: 32px;
            border-top: 2px solid var(--border-light);
        }

        /* Enhanced Alerts */
        .alert {
            padding: 16px 24px;
            border-radius: var(--radius-md);
            margin-bottom: 24px;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 500;
            animation: slideInFromTop 0.5s ease;
            border: 1px solid;
        }

        .alert-success {
            background: var(--success-light);
            color: var(--success);
            border-color: var(--success);
        }

        .alert-error {
            background: var(--error-light);
            color: var(--error);
            border-color: var(--error);
        }

        .alert-warning {
            background: var(--warning-light);
            color: var(--warning);
            border-color: var(--warning);
        }

        @keyframes slideInFromTop {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Upload Progress */
        .upload-progress {
            margin-top: 16px;
            opacity: 0;
            transition: opacity 0.3s ease;
            position: relative;
            z-index: 2;
        }

        .upload-progress.show {
            opacity: 1;
        }

        .progress-bar {
            width: 100%;
            height: 6px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 3px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: white;
            width: 0%;
            transition: width 0.3s ease;
            border-radius: 3px;
        }

        .progress-text {
            font-size: 13px;
            color: rgba(255, 255, 255, 0.9);
            margin-top: 8px;
            text-align: center;
            font-weight: 500;
        }

        /* Tooltip */
        .tooltip {
            position: relative;
            display: inline-block;
        }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 160px;
            background-color: var(--primary);
            color: white;
            text-align: center;
            border-radius: var(--radius-sm);
            padding: 8px 12px;
            position: absolute;
            z-index: 1000;
            bottom: 125%;
            left: 50%;
            margin-left: -80px;
            opacity: 0;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-size: 12px;
            font-weight: 500;
            box-shadow: var(--shadow-md);
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
            transform: translateY(-4px);
        }

        .tooltip .tooltiptext::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: var(--primary) transparent transparent transparent;
        }

        /* Dropdown Menu */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: rgba(15, 23, 42, 0.95);
            backdrop-filter: blur(20px);
            min-width: 200px;
            box-shadow: var(--shadow-xl);
            z-index: 1000;
            right: 0;
            border-radius: var(--radius-md);
            border: 1px solid rgba(59, 130, 246, 0.2);
            overflow: hidden;
        }

        .dropdown-content a {
            color: white;
            padding: 16px 20px;
            text-decoration: none;
            display: block;
            font-size: 14px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .dropdown-content a:hover {
            background: var(--accent);
            transform: translateX(4px);
        }

        .dropdown:hover .dropdown-content {
            display: block;
            animation: fadeInScale 0.3s ease;
        }

        @keyframes fadeInScale {
            from {
                opacity: 0;
                transform: scale(0.95) translateY(-10px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Footer Enhancement */
        footer {
            background: var(--primary);
            color: white;
            padding: 60px 0 30px;
            border-top: 1px solid rgba(59, 130, 246, 0.2);
            margin-top: 80px;
        }

        .footer-content {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr;
            gap: 40px;
            margin-bottom: 40px;
        }

        .footer-logo {
            font-size: 28px;
            font-weight: 800;
            letter-spacing: 2px;
            background: var(--gradient-accent);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .footer-about p {
            opacity: 0.8;
            line-height: 1.7;
            margin-bottom: 20px;
            font-size: 15px;
        }

        .social-icons {
            display: flex;
            gap: 12px;
        }

        .social-icon {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-size: 16px;
        }

        .social-icon:hover {
            background: var(--accent);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .footer-links h4 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 16px;
            color: white;
        }

        .footer-links ul {
            list-style: none;
        }

        .footer-links ul li {
            margin-bottom: 10px;
        }

        .footer-links ul li a {
            opacity: 0.8;
            font-size: 14px;
            transition: all 0.3s ease;
            color: white;
            text-decoration: none;
        }

        .footer-links ul li a:hover {
            opacity: 1;
            color: var(--accent);
            transform: translateX(4px);
        }

        .contact-item {
            display: flex;
            gap: 12px;
            margin-bottom: 12px;
            opacity: 0.8;
            font-size: 14px;
            align-items: center;
        }

        .contact-icon {
            font-size: 16px;
            color: var(--accent);
        }

        .footer-bottom {
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding-top: 20px;
            display: flex;
            justify-content: space-between;
            opacity: 0.7;
            font-size: 14px;
        }

        /* Loading States */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .loading .btn {
            background: var(--text-muted);
            cursor: not-allowed;
        }

        /* Mobile Menu */
        .mobile-menu {
            display: none;
            font-size: 24px;
            cursor: pointer;
            color: white;
            padding: 8px;
            border-radius: var(--radius-sm);
            transition: all 0.3s ease;
        }

        .mobile-menu:hover {
            background: rgba(59, 130, 246, 0.1);
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .profile-content {
                grid-template-columns: 1fr;
                gap: 24px;
            }

            .profile-sidebar {
                position: static;
                order: 2;
            }

            .profile-main {
                order: 1;
            }

            .footer-content {
                grid-template-columns: 1fr 1fr;
                gap: 32px;
            }
        }

        @media (max-width: 768px) {
            nav ul {
                display: none;
            }

            .mobile-menu {
                display: block;
            }

            .container {
                padding: 0 16px;
            }

            .profile {
                padding: 24px 0 60px;
            }

            .section-title h2 {
                font-size: 32px;
            }

            .section-title p {
                font-size: 16px;
            }

            .profile-header {
                padding: 32px 24px;
            }

            .profile-body {
                padding: 32px 24px;
            }

            .profile-image {
                width: 140px;
                height: 140px;
            }

            .user-info h3 {
                font-size: 28px;
            }

            .form-row {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .action-buttons {
                flex-direction: column;
                gap: 12px;
            }

            .btn {
                justify-content: center;
                width: 100%;
            }

            .footer-content {
                grid-template-columns: 1fr;
                gap: 32px;
            }

            .footer-bottom {
                flex-direction: column;
                gap: 12px;
                text-align: center;
            }

            .sidebar-menu li a {
                padding: 14px 24px;
            }

            .profile-sidebar {
                padding: 24px 0;
            }

            .profile-sidebar h3 {
                padding: 0 24px;
            }
        }

        @media (max-width: 480px) {
            .profile-image {
                width: 120px;
                height: 120px;
            }

            .default-profile-image {
                font-size: 42px;
            }

            .user-info h3 {
                font-size: 24px;
            }

            .section-title h2 {
                font-size: 28px;
            }

            .profile-header {
                padding: 24px 20px;
            }

            .profile-body {
                padding: 24px 20px;
            }

            .form-group input {
                font-size: 15px;
                padding: 14px 16px;
            }

            .btn {
                font-size: 12px;
                padding: 12px 20px;
            }

            .profile-form h3 {
                font-size: 20px;
            }

            .image-upload-overlay,
            .image-remove-overlay {
                width: 36px;
                height: 36px;
            }
        }

        /* Enhanced hover states for better UX */
        .form-group input:hover:not(:focus) {
            border-color: var(--text-light);
            background: white;
        }

        /* Enhanced focus states for accessibility */
        .btn:focus {
            outline: 2px solid var(--accent);
            outline-offset: 2px;
        }

        .sidebar-menu li a:focus {
            outline: 2px solid var(--accent);
            outline-offset: -2px;
        }

        /* File input styling */
        #image-upload {
            display: none;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--border-light);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--text-muted);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--accent);
        }

        /* Google Sign-In user notice */
        .google-user-notice {
            background: linear-gradient(135deg, #000000 50%, #000000 75%);
            padding: 16px 24px;
            border-radius: var(--radius-md);
            margin-bottom: 24px;
            color: white;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 12px;
            animation: slideInFromTop 0.5s ease;
        }

        .google-user-notice i {
            font-size: 18px;
        }

        .google-user-notice .notice-text {
            flex: 1;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <!-- Header -->
    <%- include("../../views/partials/user/header") %>
    
    <!-- Profile Section -->
    <section class="profile">
        <div class="container">
            <div class="section-title">
                <h2>Your Profile</h2>
                <p>Manage your personal details, update your profile picture, and customize your account settings .</p>
            </div>
            
            <div class="profile-content">
                <div class="profile-sidebar">
                    <h3><i class="fas fa-user-cog"></i>Account Menu</h3>
                    <ul class="sidebar-menu">
                        <li><a href="#profile" class="active"><i class="fas fa-user-edit"></i>Edit Profile</a></li>
                        <li><a href="/orders"><i class="fas fa-shopping-bag"></i>Order History</a></li>
                        <li><a href="/wishlist"><i class="fas fa-heart"></i>Wishlist</a></li>
                        <li><a href="/address"><i class="fas fa-map-marker-alt"></i>Addresses</a></li>
                        <li><a href="/wallet"><i class="fas fa-wallet"></i>Wallet</a></li>
                        <li><a href="/coupon"><i class="fas fa-ticket-alt"></i>Coupons</a></li>
                        <li><a href="/referral"><i class="fas fa-users"></i>Referrals</a></li>
                        <li><a href="#" style="color: #ef4444;" onclick="confirmLogout()"><i class="fas fa-sign-out-alt"></i>Logout</a></li>
                    </ul>
                </div>
                
                <div class="profile-main">
                    <!-- Alert Messages -->
                    <% if (message) { %>
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i>
                            <%= message %>
                        </div>
                    <% } %>
                    <% if (error) { %>
                        <div class="alert alert-error">
                            <i class="fas fa-exclamation-circle"></i>
                            <%= error %>
                        </div>
                    <% } %>

                    <!-- Google Sign-In User Notice -->
                    <!-- <% if (!user.password) { %>
                        <div class="google-user-notice">
                            <i class="fab fa-google"></i>
                            <div class="notice-text">
                                <strong>Google Account:</strong> Email and password changes are managed through your Google account settings.
                            </div>
                        </div>
                    <% } %> -->

                    <div class="profile-header">
                        <div class="profile-image-container">
                            <div class="profile-image">
                                <% if (user.profileImage && user.profileImage !== '/images/default-avatar.png') { %>
                                    <img src="<%= user.profileImage %>" 
                                         id="profile-img" 
                                         alt="<%= user.name %>'s Profile"
                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                    <div class="default-profile-image" style="display: none;">
                                        <%= user.name ? user.name.charAt(0).toUpperCase() : 'U' %>
                                    </div>
                                <% } else { %>
                                    <div class="default-profile-image">
                                        <%= user.name ? user.name.charAt(0).toUpperCase() : 'U' %>
                                    </div>
                                <% } %>
                            </div>
                            
                            <!-- Upload Overlay -->
                            <div class="image-upload-overlay tooltip" onclick="document.getElementById('image-upload').click()">
                                <i class="fa-solid fa-camera"></i>
                                <span class="tooltiptext">Change profile picture</span>
                            </div>
                            
                            <!-- Remove Overlay (only show if user has custom image) -->
                            <% if (user.hasCustomProfileImage) { %>
                            <div class="image-remove-overlay tooltip" onclick="removeProfileImage()">
                                <i class="fa-solid fa-trash"></i>
                                <span class="tooltiptext">Remove profile picture</span>
                            </div>
                            <% } %>
                            
                            <input type="file" id="image-upload" accept="image/*" style="display: none;">
                        </div>
                        <div class="user-info">
                            <h3><%= user.name %></h3>
                            <p class="user-email"><%= user.email %></p>
                        </div>
                        <div class="upload-progress" id="upload-progress">
                            <div class="progress-bar">
                                <div class="progress-fill" id="progress-fill"></div>
                            </div>
                            <div class="progress-text" id="progress-text">Uploading...</div>
                        </div>
                    </div>

                    <div class="profile-body">
                        <div class="profile-form">
                            <h3><i class="fas fa-edit"></i>Edit Profile Information</h3>
                            <form action="/userProfile" method="POST" id="profile-form">
                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="name">Full Name</label>
                                        <input type="text" id="name" name="name" value="<%= user.name %>" required placeholder="Enter your full name">
                                    </div>
                                    <!-- <div class="form-group username-group">
                                        <label for="username">Username</label>
                                        <input type="text" 
                                               id="username" 
                                               name="username" 
                                               value="<%= user.username || '' %>" 
                                               placeholder="Enter a unique username"
                                               pattern="^[a-zA-Z0-9_]{3,30}$"
                                               title="Username can only contain letters, numbers, and underscores (3-30 characters)">
                                        <div class="username-feedback" id="username-feedback">
                                            <i class="fas fa-spinner"></i>
                                        </div>
                                        <div class="username-message" id="username-message"></div>
                                    </div> -->
                                </div>
                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="email">Email Address</label>
                                        <input type="email" id="email" name="email" value="<%= user.email %>" required readonly title="Use 'Change Email' button to update email">
                                    </div>
                                    <div class="form-group">
                                        <label for="joined">Member Since</label>
                                        <input type="text" id="joined" value="<%= new Date(user.createdOn || Date.now()).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>" readonly>
                                    </div>
                                </div>
                                
                                <div class="action-buttons">
                                    <button type="submit" class="btn " style=" background: linear-gradient(135deg, #d4a017, #e7c156);">
                                        <i class="fas fa-save"></i>
                                        Update Profile
                                    </button>
                                    
                                    <!-- Email Change Button - Disabled for Google users -->
                                    <% if (!user.password) { %>
                                        <button type="button" class="btn btn-secondary btn-disabled tooltip" onclick="showGoogleRestrictionMessage('email')">
                                            <i class="fas fa-envelope"></i>
                                            Change Email
                                            <span class="tooltiptext">Not available for Google accounts</span>
                                        </button>
                                    <% } else { %>
                                        <a href="/change-email" class="btn btn-secondary">
                                            <i class="fas fa-envelope"></i>
                                            Change Email
                                        </a>
                                    <% } %>
                                    
                                    <!-- Password Change Button - Disabled for Google users -->
                                    <% if (!user.password) { %>
                                        <button type="button" class="btn btn-secondary btn-disabled tooltip" onclick="showGoogleRestrictionMessage('password')">
                                            <i class="fas fa-lock"></i>
                                            Change Password
                                            <span class="tooltiptext">Not available for Google accounts</span>
                                        </button>
                                    <% } else { %>
                                        <a href="/change-password" class="btn btn-secondary">
                                            <i class="fas fa-lock"></i>
                                            Change Password
                                        </a>
                                    <% } %>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

   

    <!-- JavaScript -->
    <script>
        let usernameTimeout;
        let currentUsername = '<%= user.username || "" %>';
        const isGoogleUser = <%= !user.password ? 'true' : 'false' %>;

        // Page load animation
        window.addEventListener('load', function() {
            document.body.style.opacity = '0';
            document.body.style.transition = 'opacity 0.5s ease';
            setTimeout(() => {
                document.body.style.opacity = '1';
            }, 100);
        });

        // Function to show restriction message for Google users
        function showGoogleRestrictionMessage(type) {
            const messages = {
                email: 'Email changes for Google accounts must be done through your Google account settings. Please visit myaccount.google.com to update your email.',
                password: 'Password management for Google accounts is handled through Google. Please visit myaccount.google.com to manage your password and security settings.'
            };

            Swal.fire({
                title: 'Google Account Restriction',
                text: messages[type],
                icon: 'info',
                confirmButtonText: 'Go to Google Account',
                showCancelButton: true,
                cancelButtonText: 'Close',
                confirmButtonColor: '#4285f4',
                cancelButtonColor: '#64748b',
                customClass: {
                    popup: 'swal-popup'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    window.open('https://myaccount.google.com', '_blank');
                }
            });
        }

        // Profile Image Upload
        document.getElementById('image-upload').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // Validate file size (max 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showAlert('File size must be less than 5MB', 'error');
                    return;
                }

                // Validate file type
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                if (!allowedTypes.includes(file.type)) {
                    showAlert('Please select a valid image file (JPEG, PNG, GIF, or WebP)', 'error');
                    return;
                }

                // Show preview immediately
                const reader = new FileReader();
                reader.onload = function(e) {
                    updateProfileImageDisplay(e.target.result, true);
                };
                reader.readAsDataURL(file);

                // Upload the file
                uploadProfileImage(file);
            }
        });

        // Update profile image display
        function updateProfileImageDisplay(imageSrc, hasCustomImage) {
            const profileImageContainer = document.querySelector('.profile-image');
            const removeOverlay = document.querySelector('.image-remove-overlay');
            
            profileImageContainer.innerHTML = '';
            
            if (imageSrc && imageSrc !== '/images/default-avatar.png') {
                const img = document.createElement('img');
                img.src = imageSrc;
                img.id = 'profile-img';
                img.alt = '<%= user.name %>\'s Profile';
                img.style.width = '100%';
                img.style.height = '100%';
                img.style.objectFit = 'cover';
                img.style.borderRadius = '50%';
                
                img.onerror = function() {
                    // If image fails to load, show default
                    profileImageContainer.innerHTML = `
                        <div class="default-profile-image">
                            <%= user.name ? user.name.charAt(0).toUpperCase() : 'U' %>
                        </div>
                    `;
                };
                
                profileImageContainer.appendChild(img);
            } else {
                profileImageContainer.innerHTML = `
                    <div class="default-profile-image">
                        <%= user.name ? user.name.charAt(0).toUpperCase() : 'U' %>
                    </div>
                `;
            }
            
            // Show/hide remove button
            if (hasCustomImage) {
                if (!removeOverlay) {
                    const newRemoveOverlay = document.createElement('div');
                    newRemoveOverlay.className = 'image-remove-overlay tooltip';
                    newRemoveOverlay.onclick = removeProfileImage;
                    newRemoveOverlay.innerHTML = `
                        <i class="fas fa-times"></i>
                        <span class="tooltiptext">Remove profile picture</span>
                    `;
                    document.querySelector('.profile-image-container').appendChild(newRemoveOverlay);
                }
            } else {
                if (removeOverlay) {
                    removeOverlay.remove();
                }
            }
        }

        async function uploadProfileImage(file) {
            const progressElement = document.getElementById('upload-progress');
            const progressFill = document.getElementById('progress-fill');
            const progressText = document.getElementById('progress-text');

            try {
                // Show progress
                progressElement.classList.add('show');
                progressFill.style.width = '20%';
                progressText.textContent = 'Preparing upload...';

                const formData = new FormData();
                formData.append('profileImage', file);

                progressFill.style.width = '60%';
                progressText.textContent = 'Uploading...';

                const response = await fetch('/upload-profile-image', {
                    method: 'POST',
                    body: formData
                });

                progressFill.style.width = '90%';
                progressText.textContent = 'Processing...';

                const data = await response.json();
                
                if (data.success) {
                    progressFill.style.width = '100%';
                    progressText.textContent = 'Upload complete!';
                    progressFill.style.background = 'white';
                    
                    // Update the profile image display
                    updateProfileImageDisplay(data.imagePath, data.hasCustomImage);
                    
                    // Hide progress after success
                    setTimeout(() => {
                        progressElement.classList.remove('show');
                        progressFill.style.width = '0%';
                        progressFill.style.background = 'white';
                    }, 2000);

                    // Show success message
                    showAlert('Profile picture updated successfully!', 'success');
                } else {
                    throw new Error(data.message || 'Upload failed');
                }
            } catch (error) {
                console.error('Error uploading profile picture:', error);
                progressElement.classList.remove('show');
                progressFill.style.width = '0%';
                
                // Revert image on error
                updateProfileImageDisplay('<%= user.profileImage || "/images/default-avatar.png" %>', <%= user.hasCustomProfileImage || false %>);
                showAlert('Error uploading profile picture: ' + error.message, 'error');
            }
        }

        async function removeProfileImage() {
            try {
                // Show confirmation dialog
                const result = await Swal.fire({
                    title: 'Remove Profile Picture?',
                    text: 'Are you sure you want to remove your profile picture?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, Remove',
                    cancelButtonText: 'Cancel',
                    confirmButtonColor: '#ef4444',
                    cancelButtonColor: '#64748b',
                    customClass: {
                        popup: 'swal-popup'
                    }
                });

                if (!result.isConfirmed) {
                    return;
                }

                const response = await fetch('/remove-profile-image', {
                    method: 'DELETE'
                });

                const data = await response.json();
                
                if (data.success) {
                    // Update the profile image display
                    updateProfileImageDisplay(data.imagePath, data.hasCustomImage);
                    
                    // Show success message
                    showAlert('Profile picture removed successfully!', 'success');
                } else {
                    throw new Error(data.message || 'Remove failed');
                }
            } catch (error) {
                console.error('Error removing profile picture:', error);
                showAlert('Error removing profile picture: ' + error.message, 'error');
            }
        }

        // Username availability checking
        document.getElementById('username')?.addEventListener('input', function(e) {
            const username = e.target.value.trim();
            const feedback = document.getElementById('username-feedback');
            const message = document.getElementById('username-message');

            // Clear previous timeout
            clearTimeout(usernameTimeout);

            if (username === '' || username === currentUsername) {
                feedback.className = 'username-feedback';
                message.className = 'username-message';
                message.textContent = '';
                return;
            }

            // Validate username format
            const usernameRegex = /^[a-zA-Z0-9_]{3,30}$/;
            if (!usernameRegex.test(username)) {
                feedback.className = 'username-feedback taken';
                feedback.innerHTML = '<i class="fas fa-times"></i>';
                message.className = 'username-message taken show';
                message.textContent = 'Username can only contain letters, numbers, and underscores (3-30 characters)';
                return;
            }

            // Show checking state
            feedback.className = 'username-feedback checking';
            feedback.innerHTML = '<i class="fas fa-spinner"></i>';
            message.className = 'username-message show';
            message.textContent = 'Checking availability...';

            // Debounce API call
            usernameTimeout = setTimeout(async () => {
                try {
                    const response = await fetch(`/check-username?username=${encodeURIComponent(username)}`);
                    const data = await response.json();

                    if (data.available) {
                        feedback.className = 'username-feedback available';
                        feedback.innerHTML = '<i class="fas fa-check"></i>';
                        message.className = 'username-message available show';
                        message.textContent = 'Username is available!';
                    } else {
                        feedback.className = 'username-feedback taken';
                        feedback.innerHTML = '<i class="fas fa-times"></i>';
                        message.className = 'username-message taken show';
                        message.textContent = data.message || 'Username is not available';
                    }
                } catch (error) {
                    console.error('Error checking username:', error);
                    feedback.className = 'username-feedback taken';
                    feedback.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
                    message.className = 'username-message taken show';
                    message.textContent = 'Error checking username availability';
                }
            }, 500);
        });

        // Form submission with enhanced validation
        document.getElementById('profile-form').addEventListener('submit', function(e) {
            const username = document.getElementById('username')?.value.trim();
            const feedback = document.getElementById('username-feedback');

            // If username is provided and not available, prevent submission
            if (username && username !== currentUsername && feedback?.classList.contains('taken')) {
                e.preventDefault();
                showAlert('Please choose a different username', 'error');
                return false;
            }

            // Show loading state
            this.classList.add('loading');
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';

            // Reset after 5 seconds in case of errors
            setTimeout(() => {
                this.classList.remove('loading');
                submitBtn.innerHTML = originalText;
            }, 5000);
        });

        // Alert system
        function showAlert(message, type) {
            // Remove existing alerts
            const existingAlerts = document.querySelectorAll('.alert');
            existingAlerts.forEach(alert => {
                alert.style.animation = 'slideOutUp 0.3s ease forwards';
                setTimeout(() => alert.remove(), 300);
            });

            // Create new alert
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;

            // Insert at the top of profile-main
            const profileMain = document.querySelector('.profile-main');
            profileMain.insertBefore(alert, profileMain.firstChild);

            // Auto-remove after 5 seconds
            setTimeout(() => {
                alert.style.opacity = '0';
                alert.style.transform = 'translateY(-20px)';
                setTimeout(() => alert.remove(), 300);
            }, 5000);
        }

        // Smooth scrolling for sidebar links
        document.querySelectorAll('.sidebar-menu a[href^="#"]').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            });
        });

        function confirmLogout() {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to logout?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Logout',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#64748b',
                customClass: {
                    popup: 'swal-popup'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Call the /logout endpoint
                    fetch('/logout')
                        .then(response => {
                            if (response.redirected) {
                                window.location.href = response.url;
                            } else {
                                window.location.reload();
                            }
                        })
                        .catch(error => {
                            console.error("Logout error:", error);
                            window.location.reload();
                        });
                }
            });
        }

        // Add keyboard navigation for accessibility
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                // Close any open dropdowns or modals
                const dropdowns = document.querySelectorAll('.dropdown-content');
                dropdowns.forEach(dropdown => dropdown.style.display = 'none');
            }
        });

        // Enhanced file input interaction
        document.querySelector('.image-upload-overlay').addEventListener('keydown', function(e) {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                document.getElementById('image-upload').click();
            }
        });

        // Add loading animation to page transitions
        document.querySelectorAll('a[href^="/"]').forEach(link => {
            link.addEventListener('click', function(e) {
                // Don't interfere with logout or JavaScript actions
                if (this.onclick || this.href.includes('#') || this.href.includes('javascript:') || this.classList.contains('btn-disabled')) {
                    return;
                }
                
                const spinner = document.createElement('div');
                spinner.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                spinner.style.position = 'fixed';
                spinner.style.top = '50%';
                spinner.style.left = '50%';
                spinner.style.transform = 'translate(-50%, -50%)';
                spinner.style.zIndex = '9999';
                spinner.style.fontSize = '24px';
                spinner.style.color = 'var(--accent)';
                
                document.body.appendChild(spinner);
                
                // Remove spinner after 3 seconds as fallback
                setTimeout(() => {
                    if (spinner.parentNode) {
                        spinner.remove();
                    }
                }, 3000);
            });
        });

        // Add CSS animation keyframes for slide out
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideOutUp {
                from {
                    opacity: 1;
                    transform: translateY(0);
                }
                to {
                    opacity: 0;
                    transform: translateY(-20px);
                }
            }
            
            .swal-popup {
                font-family: 'Inter', sans-serif !important;
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>