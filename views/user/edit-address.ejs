<%- include("../../views/partials/user/header") %>

<style>
    #country {
    height: calc(2.25rem + 2px) !important; /* Matches Bootstrap input field height */
    padding-top: 5px !important; /* Adjust vertical alignment */
}

/* Edit Address Theme */
:root {
    --primary: #1a1a1a;
    --secondary: #f8f8f8;
    --accent: #d4af37;
    --teal: #046963;
    --text: #333;
    --light-text: #777;
    --border: #e0e0e0;
    --error: #e74c3c;
}

body {
    background-color: var(--secondary);
    color: var(--text);
    font-family: 'Helvetica Neue', Arial, sans-serif;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

/* Banner Section */
.banner-area.organic-breadcrumb {
     background: linear-gradient(135deg, #d4af37 0%, black  100%);;
    padding: 60px 0;
    color: white;
    box-shadow: 0 4px 10px #0000001a;
}

.breadcrumb-banner {
    text-align: right;
}

.breadcrumb-banner h1 {
    font-size: 36px;
    font-weight: 300;
    margin-bottom: 10px;
    color: white;
    position: relative;
}

.breadcrumb-banner h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60px;
    height: 2px;
    background-color: var(--accent);
}

.breadcrumb-banner nav a {
    color: var(--secondary);
    font-size: 16px;
    transition: color 0.3s;
}

.breadcrumb-banner nav a:hover {
    color: var(--accent);
}

.breadcrumb-banner nav .lnr {
    color: var(--secondary);
    margin: 0 5px;
}

/* Form Container */
.container.mt-4 {
    padding: 40px 20px;
}

.container.mt-4 h3 {
    font-size: 28px;
    font-weight: 600;
    text-align: center;
    position: relative;
}

.container.mt-4 h3::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background-color: var(--accent);
}

/* Form Styling */
#addressForm {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    padding: 30px;
    max-width: 900px;
    margin: 0 auto;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    font-size: 14px;
    font-weight: 500;
    color: var(--text);
    margin-bottom: 8px;
    display: block;
}

.form-control {
    border: 1px solid var(--border);
    border-radius: 4px;
    padding: 10px;
    font-size: 16px;
    transition: border-color 0.3s, box-shadow 0.3s;
    height: calc(2.25rem + 2px); /* Match #country */
}

.form-control:focus {
    border-color: var(--accent);
    box-shadow: 0 0 5px rgba(212, 175, 55, 0.3);
    outline: none;
}

.form-control.border-3 {
    border-width: 2px;
}

select.form-control {
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 16px;
    padding-right: 30px;
}

/* Error Styling */
.text-danger {
    color: var(--error);
    font-size: 12px;
    margin-top: 5px;
    display: block;
}

/* Submit Button */
.btn-primary {
    background-color: var(--accent);
    border-color: var(--accent);
    color: var(--primary);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 12px 30px;
    border-radius: 4px;
    transition: all 0.3s;
    width: 100%;
    max-width: 200px;
    display: block;
    margin: 20px auto 0;
}

.btn-primary:hover {
    background-color: #c1a033;
    border-color: #c1a033;
    transform: translateY(-2px);
}

.btn-primary:focus {
    box-shadow: 0 0 5px rgba(212, 175, 55, 0.5);
}

.btn-primary:disabled {
    background-color: #ccc;
    border-color: #ccc;
    cursor: not-allowed;
    transform: none;
}

/* Loading spinner */
.spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid #333;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 1s ease-in-out infinite;
    margin-right: 8px;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Responsive Design */
@media (max-width: 768px) {
    .banner-area.organic-breadcrumb {
        padding: 40px 0;
    }

    .breadcrumb-banner h1 {
        font-size: 28px;
    }

    .breadcrumb-banner nav a {
        font-size: 14px;
    }

    .container.mt-4 {
        padding: 20px 15px;
    }

    .container.mt-4 h3 {
        font-size: 24px;
    }

    #addressForm {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        font-size: 14px;
    }

    .btn-primary {
        padding: 10px 20px;
        font-size: 14px;
    }
}

@media (max-width: 576px) {
    .row.mb-50, .row.mb-3 {
        margin-bottom: 20px !important;
    }

    .form-group {
        margin-bottom: 10px;
    }

    .breadcrumb-banner {
        text-align: center;
        justify-content: center;
    }

    .breadcrumb-banner h1 {
        font-size: 24px;
    }

    .btn-primary {
        font-size: 12px;
    }
}
</style>

<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Edit Address</h1>
                <nav class="d-flex align-items-center">
                    <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/profile">Profile<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/address">Address<span class="lnr lnr-arrow-right"></span></a>
                    <a href="#">Edit Address</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container mt-4">
   <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Update User Address</h3>
   <form id="addressForm" class="border-0 p-3">
       <div class="row mb-50">
           <div class="form-group col-md-4">
               <label for="addressType">Address Type:</label>
               <input type="text" class="form-control border-3" value="<%=address.addressType%>" id="addressType" name="addressType" required>
           </div>
           <div class="form-group col-md-4">
               <label for="name">Name:</label>
               <input type="text" class="form-control border-3" value="<%=address.name%>" id="name" name="name" required>
           </div>
           <div class="form-group col-md-4">
            <label for="country">Country:</label>
            <select class="form-control border-3" id="country" name="country" required>
                <option value="">Select Country</option>
                <option value="India" <%= address.country === 'India' ? 'selected' : '' %>>India</option>
                <option value="United States" <%= address.country === 'United States' ? 'selected' : '' %>>United States</option>
                <option value="United Kingdom" <%= address.country === 'United Kingdom' ? 'selected' : '' %>>United Kingdom</option>
                <option value="Canada" <%= address.country === 'Canada' ? 'selected' : '' %>>Canada</option>
                <option value="Australia" <%= address.country === 'Australia' ? 'selected' : '' %>>Australia</option>
            </select>
        </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="city">City:</label>
               <input type="text" class="form-control border-3" value="<%=address.city%>" id="city" name="city" required>
           </div>
           <div class="form-group col-md-4">
               <label for="landMark">Landmark:</label>
               <input type="text" class="form-control border-3" value="<%=address.landMark%>" id="landMark" name="landMark" required>
           </div>
           <div class="form-group col-md-4">
            <label for="state">State:</label>
            <select class="form-control border-3" id="state" name="state" required>
                <option value="">Select State</option>
                <option value="Kerala" <%= address.state === 'Kerala' ? 'selected' : '' %>>Kerala</option>
                <option value="Karnataka" <%= address.state === 'Karnataka' ? 'selected' : '' %>>Karnataka</option>
                <option value="Tamil Nadu" <%= address.state === 'Tamil Nadu' ? 'selected' : '' %>>Tamil Nadu</option>
                <option value="Maharashtra" <%= address.state === 'Maharashtra' ? 'selected' : '' %>>Maharashtra</option>
                <option value="Gujarat" <%= address.state === 'Gujarat' ? 'selected' : '' %>>Gujarat</option>
                <option value="Rajasthan" <%= address.state === 'Rajasthan' ? 'selected' : '' %>>Rajasthan</option>
                <option value="Punjab" <%= address.state === 'Punjab' ? 'selected' : '' %>>Punjab</option>
                <option value="Haryana" <%= address.state === 'Haryana' ? 'selected' : '' %>>Haryana</option>
                <option value="Delhi" <%= address.state === 'Delhi' ? 'selected' : '' %>>Delhi</option>
                <option value="West Bengal" <%= address.state === 'West Bengal' ? 'selected' : '' %>>West Bengal</option>
            </select>
        </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="streetAddress">Street Address:</label>
               <input type="text" class="form-control border-3" value="<%=address.streetAddress%>" id="streetAddress" name="streetAddress" required>
           </div>
           <div class="form-group col-md-4">
               <label for="pincode">Pincode:</label>
               <input type="number" class="form-control border-3" value="<%=address.pincode%>" id="pincode" name="pincode" required>
           </div>
           <div class="form-group col-md-4">
               <label for="phone">Phone:</label>
               <input type="text" class="form-control border-3" value="<%=address.phone%>" id="phone" name="phone" required>
           </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="email">Email:</label>
               <input type="email" class="form-control border-3" value="<%=address.email%>" id="email" name="email" required>
           </div>
           <div class="form-group col-md-4">
               <label for="altPhone">Alternate Phone:</label>
               <input type="text" class="form-control border-3" value="<%=address.altPhone%>" id="altPhone" name="altPhone" required>
           </div>
       </div>
       <button type="submit" id="submitButton" class="btn btn-primary">
           <span id="buttonText">Update Address</span>
       </button>
   </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
   document.getElementById('addressForm').addEventListener('submit', async function(event) {
       event.preventDefault();
       
       if (!validateForm()) {
           return;
       }

       const submitButton = document.getElementById('submitButton');
       const buttonText = document.getElementById('buttonText');
       
       // Disable button and show loading state
       submitButton.disabled = true;
       buttonText.innerHTML = '<span class="spinner"></span>Updating...';

       try {
           const formData = new FormData(this);
           const data = Object.fromEntries(formData);

           const response = await fetch(`/editAddress?id=<%= address._id.toString() %>`, {
               method: 'POST',
               headers: {
                   'Content-Type': 'application/json',
               },
               body: JSON.stringify(data)
           });

           const result = await response.json();

           if (response.ok && result.success) {
               // Show success SweetAlert
               const swalResult = await Swal.fire({
                   title: 'Success!',
                   text: 'Address updated successfully!',
                   icon: 'success',
                   confirmButtonText: 'OK',
                   confirmButtonColor: '#d4af37',
                   showClass: {
                       popup: 'animate__animated animate__fadeInDown'
                   },
                   hideClass: {
                       popup: 'animate__animated animate__fadeOutUp'
                   }
               });

               if (swalResult.isConfirmed) {
                   window.location.href = '/address';
               }
           } else {
               throw new Error(result.message || 'Failed to update address');
           }
       } catch (error) {
           console.error('Error updating address:', error);
           Swal.fire({
               title: 'Error!',
               text: error.message || 'Failed to update address. Please try again.',
               icon: 'error',
               confirmButtonText: 'OK',
               confirmButtonColor: '#e74c3c'
           });
       } finally {
           // Re-enable button
           submitButton.disabled = false;
           buttonText.innerHTML = 'Update Address';
       }
   });

   function validateForm() {
       let isValid = true;
       
       // Clear previous errors
       document.querySelectorAll('.text-danger').forEach(error => error.remove());

       const requiredFields = ["addressType", "name", "country", "city", "landMark", "state", "streetAddress", "pincode", "phone", "email", "altPhone"];
       
       // Check required fields
       requiredFields.forEach(function(field) {
           const input = document.getElementById(field);
           const inputValue = input.value.trim();

           if (inputValue === "") {
               showFieldError(input, "This field is required.");
               isValid = false;
           }
       });

       if (!isValid) {
           return false;
       }

       // Pattern validations
       const namePattern = /^[A-Za-z\s]+$/;
       const pincodePattern = /^\d{6}$/;
       const phonePattern = /^\d{10}$/;
       const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

       const validations = [
           { field: 'name', pattern: namePattern, message: 'Name should contain alphabets only.' },
           { field: 'city', pattern: namePattern, message: 'City should contain alphabets only.' },
           { field: 'landMark', pattern: namePattern, message: 'Landmark should contain alphabets only.' },
           { field: 'pincode', pattern: pincodePattern, message: 'Pincode should be a 6-digit number.' },
           { field: 'phone', pattern: phonePattern, message: 'Phone number should be a 10-digit number.' },
           { field: 'altPhone', pattern: phonePattern, message: 'Alternate phone number should be a 10-digit number.' },
           { field: 'email', pattern: emailPattern, message: 'Please enter a valid email address.' }
       ];

       for (let validation of validations) {
           const input = document.getElementById(validation.field);
           if (input.value && !validation.pattern.test(input.value)) {
               showFieldError(input, validation.message);
               isValid = false;
               break; // Show one error at a time
           }
       }

       // Check if phone numbers are different
       const phone = document.getElementById('phone').value;
       const altPhone = document.getElementById('altPhone').value;
       if (phone && altPhone && phone === altPhone) {
           showFieldError(document.getElementById('altPhone'), 'Phone number and alternate phone number should be different.');
           isValid = false;
       }

       return isValid;
   }

   function showFieldError(input, message) {
       const errorDiv = document.createElement('div');
       errorDiv.className = "text-danger";
       errorDiv.textContent = message;
       input.parentNode.appendChild(errorDiv);
   }

   // Real-time validation - clear errors when user starts typing
   document.querySelectorAll('.form-control').forEach(input => {
       input.addEventListener('input', function() {
           const existingError = this.parentNode.querySelector('.text-danger');
           if (existingError) {
               existingError.remove();
           }
       });
   });
</script>

<%- include("../../views/partials/user/footer") %>