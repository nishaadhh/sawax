<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>SAWAX | My Wallet</title>
    <style>
        :root {
            --primary: #1a1a1a;
            --secondary: #f8f8f8;
            --accent: #d4af37;
            --text: #333;
            --light-text: #777;
            --border: #e0e0e0;
            --error: #e74c3c;
            --success: #2ecc71;
            --warning: #f39c12;
            --info: #3498db;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Helvetica Neue', Arial, sans-serif;
        }

        body {
            color: var(--text);
            background: linear-gradient(135deg, #ffffff 0%, #ffffff 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .wallet-section {
            padding: 40px 0 80px;
        }

        /* Section Header */
        .section-header {
            text-align: center;
            margin-bottom: 40px;
            background: rgba(255, 255, 255, 0.95);
            padding: 40px 20px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
        }

        .section-header h1 {
            font-size: 36px;
            font-weight: 300;
            margin-bottom: 15px;
            color: var(--primary);
            position: relative;
        }

        .section-header h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, var(--accent), #c1a033);
            border-radius: 2px;
        }

        /* Wallet Card */
        .wallet-card {
            background: linear-gradient(135deg, #000000 0%, #c1a033 100%);
            border-radius: 20px;
            padding: 40px;
            color: white;
            text-align: center;
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
            margin-bottom: 40px;
            position: relative;
            overflow: hidden;
        }

        .wallet-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(30px, -30px) rotate(120deg); }
            66% { transform: translate(-20px, 20px) rotate(240deg); }
        }

        .wallet-balance {
            font-size: 48px;
            font-weight: 700;
            margin-bottom: 15px;
            position: relative;
            z-index: 2;
        }

        .wallet-label {
            font-size: 18px;
            opacity: 0.9;
            margin-bottom: 30px;
            position: relative;
            z-index: 2;
        }

        .wallet-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-top: 30px;
            position: relative;
            z-index: 2;
        }

        .stat-item {
            background: rgba(255, 255, 255, 0.2);
            padding: 20px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }

        .stat-value {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.8;
        }

        /* Action Buttons */
        .wallet-actions {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 40px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--accent), #c1a033);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(212, 175, 55, 0.4);
        }

        .btn-danger {
            background: linear-gradient(135deg, var(--error), #c0392b);
            color: white;
        }

        .btn-danger:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(231, 76, 60, 0.4);
        }

        /* Transactions Section */
        .transactions-section {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .transactions-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--border);
        }

        .transactions-title {
            font-size: 24px;
            font-weight: 600;
            color: var(--primary);
        }

        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 15px;
            border: 1px solid var(--border);
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .transaction-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            border-color: var(--accent);
        }

        .transaction-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .transaction-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
        }

        .transaction-icon.credit {
            background: linear-gradient(135deg, var(--success), #27ae60);
        }

        .transaction-icon.debit {
            background: linear-gradient(135deg, var(--error), #c0392b);
        }

        .transaction-details h4 {
            font-size: 16px;
            font-weight: 600;
            color: var(--primary);
            margin-bottom: 5px;
        }

        .transaction-details p {
            font-size: 14px;
            color: var(--light-text);
            margin: 0;
        }

        .transaction-amount {
            text-align: right;
        }

        .amount-value {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .amount-value.credit {
            color: var(--success);
        }

        .amount-value.debit {
            color: var(--error);
        }

        .transaction-date {
            font-size: 12px;
            color: var(--light-text);
        }

        /* Empty State */
        .empty-transactions {
            text-align: center;
            padding: 60px 20px;
            color: var(--light-text);
        }

        .empty-transactions i {
            font-size: 60px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .empty-transactions h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: var(--primary);
        }

        /* Pagination */
        .pagination-wrapper {
            display: flex;
            justify-content: center;
            margin-top: 30px;
        }

        .pagination {
            display: flex;
            gap: 8px;
            background: white;
            padding: 15px 25px;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .pagination a, .pagination button {
            padding: 10px 15px;
            border: 2px solid var(--border);
            background: white;
            color: var(--text);
            border-radius: 8px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            min-width: 40px;
            text-align: center;
        }

        .pagination a:hover, .pagination button:hover:not(:disabled) {
            border-color: var(--accent);
            background: var(--accent);
            color: white;
        }

        .pagination .active {
            background: var(--accent);
            color: white;
            border-color: var(--accent);
        }

        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 0 15px;
            }

            .wallet-balance {
                font-size: 36px;
            }

            .wallet-stats {
                grid-template-columns: 1fr;
            }

            .wallet-actions {
                flex-direction: column;
                align-items: center;
            }

            .btn {
                width: 100%;
                max-width: 300px;
                justify-content: center;
            }

            .transaction-item {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .transaction-amount {
                text-align: center;
            }

            .transactions-header {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 20px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
            position: relative;
            animation: modalSlideIn 0.3s ease-out;
        }

        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .close {
            position: absolute;
            right: 15px;
            top: 15px;
            font-size: 28px;
            font-weight: bold;
            color: var(--light-text);
            cursor: pointer;
            transition: color 0.3s;
        }

        .close:hover {
            color: var(--error);
        }

        .modal h2 {
            margin-bottom: 20px;
            color: var(--primary);
            text-align: center;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--primary);
        }

        .input-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid var(--border);
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        .input-group input:focus {
            border-color: var(--accent);
            outline: none;
            box-shadow: 0 0 5px rgba(212, 175, 55, 0.3);
        }

        /* Loading state */
        .loading {
            pointer-events: none;
            opacity: 0.7;
            position: relative;
        }

        .loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: translateY(-50%) rotate(0deg); }
            100% { transform: translateY(-50%) rotate(360deg); }
        }
    </style>
</head>
<body>
    <%- include("../../views/partials/user/header") %>

    <section class="wallet-section">
        <div class="container">
            <!-- Section Header -->
            <div class="section-header">
                <h1><i class="fas fa-wallet"></i> My Wallet</h1>
                <p>Manage your wallet balance and view transaction history</p>
            </div>

            <!-- Wallet Card -->
            <div class="wallet-card">
                <div class="wallet-label">Current Balance</div>
                <div class="wallet-balance">₹<%= wallet.balance.toFixed(2) %></div>
                
                <div class="wallet-stats">
                    <div class="stat-item">
                        <div class="stat-value">₹<%= wallet.refundAmount.toFixed(2) %></div>
                        <div class="stat-label">Total Refunds</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-value">₹<%= wallet.totalDebited.toFixed(2) %></div>
                        <div class="stat-label">Total Spent</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-value"><%= transactions.length %></div>
                        <div class="stat-label">Recent Transactions</div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="wallet-actions">
                <button class="btn btn-primary" onclick="openAddMoneyModal()">
                    <i class="fas fa-plus"></i> Add Money
                </button>
                <!-- <button class="btn btn-danger" onclick="openWithdrawModal()">
                    <i class="fas fa-minus"></i> Withdraw Money
                </button> -->
            </div>

            <!-- Transactions Section -->
            <div class="transactions-section">
                <div class="transactions-header">
                    <h2 class="transactions-title">
                        <i class="fas fa-history"></i> Transaction History
                    </h2>
                </div>

                <% if (hasTransactions) { %>
                    <div class="transactions-list">
                        <% transactions.forEach(transaction => { %>
                            <div class="transaction-item">
                                <div class="transaction-info">
                                    <div class="transaction-icon <%= transaction.type %>">
                                        <i class="fas fa-<%= transaction.type === 'credit' ? 'arrow-down' : 'arrow-up' %>"></i>
                                    </div>
                                    <div class="transaction-details">
                                        <h4><%= transaction.description || 'Transaction' %></h4>
                                        <p>
                                            <%= transaction.transactionPurpose || 'General' %> 
                                            <% if (transaction.referenceId) { %>
                                                • ID: <%= transaction.referenceId %>
                                            <% } %>
                                        </p>
                                    </div>
                                </div>
                                <div class="transaction-amount">
                                    <div class="amount-value <%= transaction.type %>">
                                        <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                                    </div>
                                    <div class="transaction-date">
                                        <%= new Date(transaction.date).toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'short', 
                                            day: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        }) %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Pagination -->
                    <% if (totalPages > 1) { %>
                        <div class="pagination-wrapper">
                            <div class="pagination">
                                <% if (currentPage > 1) { %>
                                    <a href="/wallet?page=<%= currentPage - 1 %>">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                <% } else { %>
                                    <button disabled><i class="fas fa-chevron-left"></i></button>
                                <% } %>
                                
                                <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                                    <% if (i === currentPage) { %>
                                        <button class="active"><%= i %></button>
                                    <% } else { %>
                                        <a href="/wallet?page=<%= i %>"><%= i %></a>
                                    <% } %>
                                <% } %>
                                
                                <% if (currentPage < totalPages) { %>
                                    <a href="/wallet?page=<%= currentPage + 1 %>">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                <% } else { %>
                                    <button disabled><i class="fas fa-chevron-right"></i></button>
                                <% } %>
                            </div>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="empty-transactions">
                        <i class="fas fa-receipt"></i>
                        <h3>No Transactions Yet</h3>
                        <p>Your transaction history will appear here once you start using your wallet.</p>
                    </div>
                <% } %>
            </div>

            <!-- Back Button -->
            <div style="text-align: center; margin-top: 40px;">
                <a href="/profile" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Back to Profile
                </a>
            </div>
        </div>
    </section>

    <!-- Add Money Modal -->
    <div id="addMoneyModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('addMoneyModal')">&times;</span>
            <h2><i class="fas fa-plus-circle"></i> Add Money to Wallet</h2>
            <form id="addMoneyForm">
                <div class="input-group">
                    <label for="addAmount">Enter Amount (₹)</label>
                    <input type="number" id="addAmount" min="1" max="50000" step="1" placeholder="Enter amount" required>
                    <small style="color: var(--light-text); font-size: 12px;">Minimum: ₹1, Maximum: ₹50,000</small>
                </div>
                <button type="submit" class="btn btn-primary" style="width: 100%;">
                    <i class="fas fa-credit-card"></i> Pay Now
                </button>
            </form>
        </div>
    </div>

    <!-- Withdraw Money Modal -->
    <div id="withdrawModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('withdrawModal')">&times;</span>
            <h2><i class="fas fa-minus-circle"></i> Withdraw Money</h2>
            <form id="withdrawForm">
                <div class="input-group">
                    <label for="withdrawAmount">Enter Amount (₹)</label>
                    <input type="number" id="withdrawAmount" min="10" max="<%= wallet.balance %>" step="1" placeholder="Enter amount" required>
                    <small style="color: var(--light-text); font-size: 12px;">
                        Available Balance: ₹<%= wallet.balance.toFixed(2) %> • Minimum: ₹10
                    </small>
                </div>
                <button type="submit" class="btn btn-danger" style="width: 100%;">
                    <i class="fas fa-money-bill-wave"></i> Withdraw
                </button>
            </form>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Modal functions
        function openAddMoneyModal() {
            document.getElementById('addMoneyModal').style.display = 'block';
            document.getElementById('addAmount').focus();
        }

        function openWithdrawModal() {
            const currentBalance = <%= wallet.balance %>;
            if (currentBalance < 10) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Insufficient Balance',
                    text: 'You need at least ₹10 to withdraw money.',
                    confirmButtonText: 'OK'
                });
                return;
            }
            document.getElementById('withdrawModal').style.display = 'block';
            document.getElementById('withdrawAmount').focus();
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const addModal = document.getElementById('addMoneyModal');
            const withdrawModal = document.getElementById('withdrawModal');
            if (event.target === addModal) {
                addModal.style.display = 'none';
            }
            if (event.target === withdrawModal) {
                withdrawModal.style.display = 'none';
            }
        }

        // Add Money Form Handler
        document.getElementById('addMoneyForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const amount = parseFloat(document.getElementById('addAmount').value);
            const submitBtn = e.target.querySelector('button[type="submit"]');
            
            if (amount < 1 || amount > 50000) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Amount',
                    text: 'Amount must be between ₹1 and ₹50,000',
                    confirmButtonText: 'OK'
                });
                return;
            }

            submitBtn.classList.add('loading');
            submitBtn.disabled = true;

            try {
                // Create Razorpay order
                const response = await fetch('/wallet/create-razorpay-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount })
                });

                const orderData = await response.json();

                if (!orderData.success) {
                    throw new Error(orderData.message);
                }

                // Initialize Razorpay
                const options = {
                    key: orderData.key_id,
                    amount: orderData.amount,
                    currency: 'INR',
                    name: 'SAWAX Wallet',
                    description: 'Add money to wallet',
                    order_id: orderData.order_id,
                    handler: async function(response) {
                        try {
                            // Verify payment
                            const verifyResponse = await fetch('/wallet/verify-payment', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature
                                })
                            });

                            const verifyData = await verifyResponse.json();

                            if (verifyData.success) {
                                await Swal.fire({
                                    icon: 'success',
                                    title: 'Payment Successful!',
                                    text: `₹${amount} has been added to your wallet.`,
                                    timer: 2000,
                                    timerProgressBar: true
                                });
                                location.reload();
                            } else {
                                throw new Error(verifyData.message);
                            }
                        } catch (error) {
                            console.error('Error verifying payment:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Verification Failed',
                                text: error.message || 'Please contact support if money was debited.',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    prefill: {
                        name: '<%= user.name %>',
                        email: '<%= user.email %>'
                    },
                    theme: {
                        color: '#d4af37'
                    },
                    modal: {
                        ondismiss: function() {
                            submitBtn.classList.remove('loading');
                            submitBtn.disabled = false;
                        }
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();

            } catch (error) {
                console.error('Error creating order:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: error.message || 'Failed to create payment order',
                    confirmButtonText: 'OK'
                });
                submitBtn.classList.remove('loading');
                submitBtn.disabled = false;
            }
        });

        // Withdraw Money Form Handler
        document.getElementById('withdrawForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const amount = parseFloat(document.getElementById('withdrawAmount').value);
            const currentBalance = <%= wallet.balance %>;
            const submitBtn = e.target.querySelector('button[type="submit"]');
            
            if (amount < 10) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Amount',
                    text: 'Minimum withdrawal amount is ₹10',
                    confirmButtonText: 'OK'
                });
                return;
            }

            if (amount > currentBalance) {
                Swal.fire({
                    icon: 'error',
                    title: 'Insufficient Balance',
                    text: `You only have ₹${currentBalance.toFixed(2)} in your wallet`,
                    confirmButtonText: 'OK'
                });
                return;
            }

            // Confirm withdrawal
            const result = await Swal.fire({
                title: 'Confirm Withdrawal',
                text: `Are you sure you want to withdraw ₹${amount}?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, Withdraw',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#e74c3c'
            });

            if (!result.isConfirmed) return;

            submitBtn.classList.add('loading');
            submitBtn.disabled = true;

            try {
                const response = await fetch('/wallet/withdraw-money', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount })
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Withdrawal Successful!',
                        text: `₹${amount} has been withdrawn from your wallet.`,
                        timer: 2000,
                        timerProgressBar: true
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error withdrawing money:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Withdrawal Failed',
                    text: error.message || 'Failed to withdraw money',
                    confirmButtonText: 'OK'
                });
            } finally {
                submitBtn.classList.remove('loading');
                submitBtn.disabled = false;
            }
        });

        // Add loading animations on page load
        document.addEventListener('DOMContentLoaded', function() {
            const walletCard = document.querySelector('.wallet-card');
            const transactionItems = document.querySelectorAll('.transaction-item');
            
            // Animate wallet card
            walletCard.style.opacity = '0';
            walletCard.style.transform = 'translateY(30px)';
            walletCard.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            
            setTimeout(() => {
                walletCard.style.opacity = '1';
                walletCard.style.transform = 'translateY(0)';
            }, 200);

            // Animate transaction items
            transactionItems.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateX(-20px)';
                item.style.transition = 'opacity 0.4s ease, transform 0.4s ease';
                
                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.transform = 'translateX(0)';
                }, 400 + (index * 100));
            });
        });
    </script>

    <!-- <%- include("../../views/partials/user/footer") %> -->
</body>
</html>