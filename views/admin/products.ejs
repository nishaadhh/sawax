<%- include("../../views/partials/admin/header") %>
<head>
    <meta name="csrf-token" content="<%- csrfToken %>">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        /* Content Header Styles */
.content-header {
    padding: 2rem 0;
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
}
:root {
      --primary-color: #3498db;
      --secondary-color: #2c3e50;
      --success-color: #2ecc71;
      --danger-color: #e74c3c;
      --info-color: #3498db;
      --light-gray: #ecf0f1;
    }

.content-title {
    font-size: 1.75rem;
    color: #2c3e50;
    margin: 0;
    text-align: center;
}

/* Error Message Styles */
.error-message {
    color: #e74c3c;
    text-align: center;
    padding: 10px;
    margin-bottom: 20px;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    border-radius: 4px;
}

/* Table Styles */
.table {
    width: 100%;
    border-collapse: collapse;
    margin: 25px 0;
    font-size: 0.9em;
    font-family: sans-serif;
    min-width: 400px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
}

.table thead tr {
    background-color: #000000;
    color: #ccc4c4;
    text-align: center;
    font-weight: bold;
}

.table thead th {
    padding: 12px 15px;
    vertical-align: middle;
    border: 1px solid #dddddd;
    white-space: nowrap;
    font-size: 16px;
}

.table tbody tr {
    border-bottom: 1px solid #dddddd;
}

.table tbody tr:nth-of-type(even) {
    background-color: #f3f3f3;
}

.table tbody tr:last-of-type {
    border-bottom: 2px solid #d4af37;
}

.table tbody td {
    padding: 12px 15px;
    text-align: center;
    border: 1px solid #dddddd;
    vertical-align: middle;
}

/* Search Form Styles */
.search-form {
    margin: 20px auto;
    max-width: 600px;
}

.input-group {
    display: flex;
    justify-content: center;
}

.search-input {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 4px 0 0 4px;
    width: 70%;
}

.search-button {
    padding: 10px 20px;
    background-color: #000000;
    color: white;
    border: none;
    border-radius: 0 4px 4px 0;
    cursor: pointer;
}

.search-button:hover {
    background-color: #af8c18;
}

/* Button Styles */
.btn {
    padding: 8px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    text-decoration: none;
    display: inline-block;
    margin: 2px;
}

.btn-sm {
    padding: 5px 10px;
    font-size: 0.875rem;
}

.btn-info {
    background-color: #17a2b8;
    color: white;
}

.btn-warning {
    background-color: #ffc107;
    color: black;
}

.btn-danger {
    background-color: #dc3545;
    color: white;
}

.btn-success {
    background-color: #28a745;
    color: white;
}

/* Image Styles */
.product-image {
    border-radius: 4px;
    object-fit: cover;
    margin: 2px;
}

/* Pagination Styles */
.pagination {
    display: flex;
    padding-left: 0;
    list-style: none;
    justify-content: center;
    margin: 20px 0;
}

.page-item {
    margin: 0 2px;
}

.page-link {
    padding: 8px 16px;
    border: 1px solid #ddd;
    color: #000000;
    text-decoration: none;
    background-color: #1e90ff;
}

.page-item.active .page-link {
    background-color: #1e90ff;
    color: #000000;
    border-color: #d4af37;
}

.page-link:hover {
    background-color: #ffffff;
    color: #1e90ff;
}

/* Responsive Design */
@media screen and (max-width: 768px) {
    .table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }
    
    .table thead th,
    .table tbody td {
        min-width: 120px;
    }
    
    .search-input {
        width: 60%;
    }
}

/* Action Icons */
.bi-trash-fill {
    color: #dc3545;
    transition: color 0.2s;
}

.bi-trash-fill:hover {
    color: #bb2d3b;
}

/* Text Colors */
.text-white {
    color: white !important;
}

/* Links */
a {
    text-decoration: none;
}

/* Price Display */
.price-info {
    font-size: 0.9em;
}

.original-price {
    color: #666;
    text-decoration: line-through;
    margin-right: 5px;
}

.sale-price {
    color: #e74c3c;
    font-weight: bold;
}

.offer-info {
    font-size: 0.8em;
    margin-top: 5px;
}

.effective-offer {
    background-color: #28a745;
    color: white;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.75em;
}
    </style>
</head>
<div class="content-header">
    <h2 class="content-title">Products Management</h2>
</div>
<div class="container">
    <!-- Display error message if present -->
    <% if (typeof error !== 'undefined' && error) { %>
        <div class="error-message"><%- error %></div>
    <% } %>

    <form action="" method="get" class="search-form text-center mb-4">
        <div class="input-group">
            <input type="text" class="form-control search-input" placeholder="Search products or brands" name="search">
            <button class="btn search-button" type="submit">Search</button>
        </div>
    </form>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Product name</th>
                    <th>Brand</th>
                    <th>Category</th>
                    <th>Price Info</th>
                    <th>Product Offer</th>
                    <th>Quantity</th>
                    <th>Action</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                <% if (!data || data.length === 0) { %>
                    <tr>
                        <td colspan="9" style="text-align: center;">No products available.</td>
                    </tr>
                <% } else { %>
                    <% for(let i=data.length-1; i>=0; i--) { %>
                    <tr>
                        <td>
                            <% if(data[i].productImage && data[i].productImage.length > 0) { %>
                                <% data[i].productImage.forEach(image => { %>
                                    <img src="/<%= image %>" alt="<%= data[i].productName %>" class="product-image" style="width: 50px; height: 50px; margin: 2px;">
                                <% }); %>
                            <% } else { %>
                                <img src="/placeholder.svg" alt="No image" class="product-image" style="width: 50px; height: 50px;">
                            <% } %>
                        </td>
                        <td><%= data[i].productName %></td>
                        <td><%= data[i].brand %></td>
                        <td><%= data[i].category ? data[i].category.name : 'N/A' %></td>
                        <td class="price-info">
                            <% 
                                const categoryOffer = data[i].category ? data[i].category.categoryOffer : 0;
                                const productOffer = data[i].productOffer || 0;
                                const maxOffer = Math.max(categoryOffer, productOffer);
                                const regularPrice = data[i].regularPrice;
                                const salePrice = data[i].salePrice;
                            %>
                            <div>
                                <% if (maxOffer > 0) { %>
                                    <span class="original-price">₹<%= regularPrice %></span>
                                    <span class="sale-price">₹<%= salePrice %></span>
                                <% } else { %>
                                    <span class="sale-price">₹<%= regularPrice %></span>
                                <% } %>
                            </div>
                            <% if (maxOffer > 0) { %>
                                <div class="offer-info">
                                    <span class="effective-offer"><%= maxOffer %>% OFF</span>
                                    <% if (categoryOffer > 0 && productOffer > 0) { %>
                                        <br><small>Cat: <%= categoryOffer %>% | Prod: <%= productOffer %>%</small>
                                    <% } %>
                                </div>
                            <% } %>
                        </td>
                        <td>
                            <% if(data[i].productOffer && data[i].productOffer > 0) { %>
                                <%= data[i].productOffer %>%
                                <button class="btn btn-sm btn-warning" onclick="editOffer('<%= data[i]._id %>', <%= data[i].productOffer %>)">
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="removeOffer('<%= data[i]._id %>')">
                                    Remove
                                </button>
                            <% } else { %>
                                0%
                                <button class="btn btn-sm btn-info" onclick="addOffer('<%= data[i]._id %>')">
                                    Add Offer
                                </button>
                            <% } %>
                        </td>
                        <td><%= data[i].quantity %></td>
                        <td>
                            <% if(data[i].isBlocked === false) { %>
                                <button class="btn btn-danger">
                                    <a href="#" onclick="confirmBlockProduct(event, '<%= data[i]._id %>')" class="text-white" style="text-decoration: none;">Block</a>
                                </button>
                            <% } else { %>
                                <button class="btn btn-success">
                                    <a href="#" onclick="confirmUnblockProduct(event, '<%= data[i]._id %>')" class="text-white" style="text-decoration: none;">Unblock</a>
                                </button>
                            <% } %>
                            <a href="#" onclick="confirmDelete('<%= data[i]._id %>')" class="text-white" style="text-decoration: none;">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                    <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>
                                </svg>
                            </a>
                        </td>
                        <td>
                            <button class="btn btn-info">
                                <a href="/admin/editProduct?id=<%= data[i]._id %>" class="text-white" style="text-decoration: none;">Edit</a>
                            </button>
                        </td>
                    </tr>
                    <% } %>
                <% } %>
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= (i === parseInt(currentPage)) ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
            <% } %>
        </ul>
    </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
async function addOffer(productId) {
    const { value: percentage } = await Swal.fire({
        title: "Add Product Offer",
        input: "number",
        inputLabel: "Offer Percentage (1-99%)",
        inputPlaceholder: "Enter offer percentage",
        inputAttributes: {
            min: 1,
            max: 99,
            step: 1
        },
        showCancelButton: true,
        inputValidator: (value) => {
            if (!value || value < 1 || value > 99) {
                return "Please enter a valid percentage between 1 and 99";
            }
        }
    });

    if (percentage) {
        updateOffer(productId, percentage);
    }
}

async function editOffer(productId, currentOffer) {
    const { value: percentage } = await Swal.fire({
        title: "Edit Product Offer",
        input: "number",
        inputLabel: "Offer Percentage (1-99%)",
        inputPlaceholder: "Enter offer percentage",
        inputValue: currentOffer,
        inputAttributes: {
            min: 1,
            max: 99,
            step: 1
        },
        showCancelButton: true,
        inputValidator: (value) => {
            if (!value || value < 1 || value > 99) {
                return "Please enter a valid percentage between 1 and 99";
            }
        }
    });

    if (percentage) {
        updateOffer(productId, percentage);
    }
}

function updateOffer(productId, percentage) {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    $.ajax({
        url: "/admin/addProductOffer",
        method: "post",
        data: {
            productId: productId,
            percentage: percentage
        },
        headers: {
            'CSRF-Token': csrfToken
        },
        success: (response) => {
            if (response.status) {
                Swal.fire('Success', 'Product offer updated successfully', 'success').then(() => {
                    location.reload();
                });
            } else {
                Swal.fire('Error', response.message || 'Failed to update offer', 'error');
            }
        },
        error: (error) => {
            console.error('Error:', error);
            Swal.fire('Error', 'An unexpected error occurred', 'error');
        }
    });
}

function removeOffer(productId) {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    Swal.fire({
        title: "Remove Product Offer",
        text: "Are you sure you want to remove this product offer?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, remove it"
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: "/admin/removeProductOffer",
                method: 'post',
                data: {
                    productId: productId
                },
                headers: {
                    'CSRF-Token': csrfToken
                },
                success: (response) => {
                    if (response.status) {
                        Swal.fire("Removed!", "The product offer has been removed", "success").then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire('Error', response.message || 'Failed to remove offer', 'error');
                    }
                },
                error: (error) => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'An unexpected error occurred', 'error');
                }
            });
        }
    });
}

function confirmBlockProduct(event, productId) {
    event.preventDefault();
    Swal.fire({
      title: "Are you sure?",
      text: "You are about to block this product!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, Block!",
    }).then((result) => {
      if (result.isConfirmed) {
        window.location.href = "/admin/blockProduct?id=" + productId;
      }
    });
}

function confirmUnblockProduct(event, productId) {
    event.preventDefault();
    Swal.fire({
      title: "Are you sure?",
      text: "You are about to unblock this product!",
      icon: "info",
      showCancelButton: true,
      confirmButtonColor: "#28a745",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, Unblock!",
    }).then((result) => {
      if (result.isConfirmed) {
        window.location.href = "/admin/unblockProduct?id=" + productId;
      }
    });
}

function confirmDelete(productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "You will not be able to undo this action!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
    }).then((result) => {
        if (result.isConfirmed) {
            // Proceed with the deletion
            window.location.href = `/admin/deleteProduct?id=${productId}`;
        }
    });
}
</script>

<%- include("../../views/partials/admin/footer") %>