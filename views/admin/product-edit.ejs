<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        :root {
            --primary-color: #3b82f6;
            --secondary-color: #1f2937;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --info-color: #3b82f6;
            --light-gray: #f3f4f6;
            --background-color: #ffffff;
            --text-color: #111827;
            --border-color: #e5e7eb;
        }

        [data-theme="dark"] {
            --background-color: #111827;
            --text-color: #f9fafb;
            --border-color: #374151;
            --light-gray: #1f2937;
        }

        body {
            background-color: var(--background-color);
            color: var(--text-color);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .content-main {
            padding: 1.5rem;
        }

        .content-header {
            padding: 1.5rem 0;
            background-color: var(--light-gray);
            border-bottom: 1px solid var(--border-color);
            text-align: center;
        }

        .content-title {
            font-size: 1.875rem;
            font-weight: 600;
            margin: 0;
            color: var(--secondary-color);
        }

        .card {
            background-color: var(--background-color);
            border: 1px solid var(--border-color);
            border-radius: 0.375rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .form-label {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--text-color);
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control, .form-select {
            width: 100%;
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
            border: 1px solid var(--border-color);
            border-radius: 0.375rem;
            background-color: var(--background-color);
            color: var(--text-color);
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
        }

        .btn-primary {
            background-image: linear-gradient(#a855f7, #3b0764);;
            color: #ffffff;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 0.375rem;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s ease, transform 0.1s ease;
        }

        .btn-primary:hover {
            background-color: #2563eb;
            transform: translateY(-1px);
        }

        .btn-primary:disabled {
            background-color: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        .btn-danger.btn-sm {
            background-color: var(--danger-color);
            color: #ffffff;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            border: none;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .btn-danger.btn-sm:hover {
            background-color: #dc2626;
        }

        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .thumbnail {
            position: relative;
            width: 150px;
        }

        .thumbnail img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 0.375rem;
            border: 1px solid var(--border-color);
        }

        .delete-btn {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background-color: var(--danger-color);
            color: #ffffff;
            border: none;
            border-radius: 50%;
            width: 1.5rem;
            height: 1.5rem;
            font-size: 0.75rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s ease;
        }

        .delete-btn:hover {
            background-color: #dc2626;
        }

        .cropper-container {
            width: 100%;
            max-width: 500px;
            margin: 1.5rem auto;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin-left: -0.75rem;
            margin-right: -0.75rem;
        }

        .col-lg-3, .col-lg-4, .col-md-3 {
            padding-left: 0.75rem;
            padding-right: 0.75rem;
            flex: 1;
        }

        .image-counter {
            margin-top: 0.5rem;
            font-size: 0.875rem;
            color: var(--text-color);
            text-align: center;
        }

        .image-counter.error {
            color: var(--danger-color);
            font-weight: 500;
        }

        .image-counter.success {
            color: var(--success-color);
            font-weight: 500;
        }
        .error-message {
            color: red;
            font-size: 0.875rem;
        }
        @media (min-width: 992px) {
            .col-lg-3 {
                flex: 0 0 25%;
                max-width: 25%;
            }
            .col-lg-4 {
                flex: 0 0 33.333333%;
                max-width: 33.333333%;
            }
        }

        @media (min-width: 768px) {
            .col-md-3 {
                flex: 0 0 25%;
                max-width: 25%;
            }
        }
    </style>
</head>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <form id="editProductForm" method="POST" action="/admin/editProduct/<%= product._id %>" onsubmit="validateProductForm(event)" enctype="multipart/form-data">
                <div class="mb-4">
                    <label for="product_name" class="form-label">Product Name</label>
                    <input type="text" name="productName" value="<%= product.productName %>" class="form-control" id="product_name" required>
                    <div id="productName-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea name="description" class="form-control" rows="4" required><%= product.description %></textarea>
                     <div id="description-error" class="error-message"></div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Regular Price</label>
                            <input name="regularPrice" type="number" value="<%= product.regularPrice %>" class="form-control" required min="0" step="0.01">
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Quantity</label>
                            <input name="quantity" type="number" value="<%= product.quantity %>" class="form-control" required min="0">
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Color</label>
                            <input name="color" type="text" value="<%= product.color %>" class="form-control" required>
                            <div id="color-error" class="error-message"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Brand</label>
                            <input name="brand" type="text" value="<%= product.brand %>" class="form-control" required>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Category</label>
                            <select class="form-select" name="category" required>
                                <% for (let i = 0; i < cat.length; i++) { %>
                            <option value="<%= cat[i]._id %>" 
                            <%= product.category && product.category._id.toString() === cat[i]._id.toString() ? 'selected' : '' %>>
                                 <%= cat[i].name %>
                            </option>
                                <% } %>
                            </select>

                        </div>
                    </div>
                </div>
                <div class="mb-4">
                    <label class="form-label">Product Images</label>
                    <div class="row" id="imageContainer">
                        <% 
                        // Create array of 4 slots, filling with existing images or null
                        let imageSlots = [null, null, null, null];
                        for(let i = 0; i < product.productImage.length && i < 4; i++) {
                            imageSlots[i] = product.productImage[i];
                        }
                        %>
                        <% for(let i = 0; i < 4; i++) { %>
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <% if(imageSlots[i]) { %>
                                        <img src="/<%= imageSlots[i] %>" class="card-img-top existing-image" alt="Product Image" data-index="<%= i %>">
                                        <div class="card-body">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteSingleImage('<%= imageSlots[i] %>', '<%= product._id %>', <%= i %>)">Delete</button>
                                        </div>
                                    <% } else { %>
                                        <div class="card-body">
                                            <input type="file" name="image<%= i+1 %>" accept="image/*" class="form-control image-input" data-index="<%= i %>" onchange="previewImage(event, <%= i %>)">
                                            <img id="preview<%= i %>" src="#" alt="Image preview" style="display: none; max-width: 100%; height: auto; margin-top: 10px;">
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                    <div class="image-counter" id="imageCounter">
                        Images: <span id="imageCount">0</span>/4 (4 images required)
                    </div>
                </div>
                <div class="mb-4">
                    <button class="btn btn-primary" type="submit" id="submitBtn" disabled>Update Product</button>
                </div>
            </form>
        </div>
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function validateProductForm(event) {
    document.querySelectorAll(".error-message").forEach(el => el.innerHTML = "");
    let isValid = true;

    // Helper to check empty or only spaces
    function isEmptyOrSpaces(str) {
        return str.trim().length === 0;
    }

    // Product Name
    const productNameInput = document.getElementById("product_name");
    const productName = productNameInput.value.trim(); // trim spaces
    productNameInput.value = productName; // update input value to trimmed
    if (isEmptyOrSpaces(productName)) {
        document.getElementById("productName-error").innerText = "Product Name cannot be empty or spaces only";
        isValid = false;
    }

    // Description
    const descriptionInput = document.querySelector("textarea[name='description']");
    const description = descriptionInput.value.trim();
    descriptionInput.value = description;
    if (isEmptyOrSpaces(description)) {
        document.getElementById("description-error").innerText = "Description cannot be empty or spaces only";
        isValid = false;
    }

    // Brand
    const brandInput = document.querySelector("input[name='brand']");
    const brand = brandInput.value.trim();
    brandInput.value = brand;
    if (isEmptyOrSpaces(brand)) {
        document.getElementById("brand-error").innerText = "Brand cannot be empty or spaces only";
        isValid = false;
    }

    // Color
    const colorInput = document.querySelector("input[name='color']");
    const color = colorInput.value.trim();
    colorInput.value = color;
    if (isEmptyOrSpaces(color)) {
        document.getElementById("color-error").innerText = "Color cannot be empty or spaces only";
        isValid = false;
    }

    if (!isValid) {
        event.preventDefault(); // stop form submission
    }

    return isValid;
}
</script>

<script>
    let croppers = {};
    
    function updateImageCounter() {
        const existingImages = document.querySelectorAll('.existing-image').length;
        const newImages = Array.from(document.querySelectorAll('.image-input'))
            .filter(input => input.files && input.files.length > 0).length;
        
        const totalImages = existingImages + newImages;
        const imageCountSpan = document.getElementById('imageCount');
        const imageCounter = document.getElementById('imageCounter');
        const submitBtn = document.getElementById('submitBtn');
        
        imageCountSpan.textContent = totalImages;
        
        if (totalImages === 4) {
            imageCounter.classList.remove('error');
            imageCounter.classList.add('success');
            submitBtn.disabled = false;
            submitBtn.textContent = 'Update Product';
        } else {
            imageCounter.classList.remove('success');
            imageCounter.classList.add('error');
            submitBtn.disabled = true;
            submitBtn.textContent = `Need ${4 - totalImages} more image${4 - totalImages === 1 ? '' : 's'}`;
        }
    }
    
    // Initialize counter on page load
    document.addEventListener('DOMContentLoaded', function() {
        updateImageCounter();
    });
    
    function previewImage(event, index) {
        const input = event.target;
        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const preview = document.getElementById(`preview${index}`);
                preview.src = e.target.result;
                preview.style.display = 'block';
                
                if (croppers[index]) {
                    croppers[index].destroy();
                }
                
                croppers[index] = new Cropper(preview, {
                    aspectRatio: 1,
                    viewMode: 1,
                    ready: function() {
                        this.cropper.crop();
                    }
                });
                
                updateImageCounter();
            };
            reader.readAsDataURL(input.files[0]);
        } else {
            updateImageCounter();
        }
    }
    
    function deleteSingleImage(imageName, productId, index) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Delete this image?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/admin/deleteImage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        imageNameToServer: imageName,
                        productIdToServer: productId,
                        imageIndex: index
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        location.reload();
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to delete image',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred while deleting the image',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    }
    
    document.getElementById('editProductForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const existingImages = document.querySelectorAll('.existing-image').length;
        const newImages = Array.from(this.querySelectorAll('.image-input'))
            .filter(input => input.files && input.files.length > 0).length;
        const totalImages = existingImages + newImages;
        
        if (totalImages !== 4) {
            Swal.fire({
                title: 'Error!',
                text: 'Exactly 4 images are required',
                icon: 'error',
                confirmButtonText: 'OK'
            });
            return;
        }
        
        const formData = new FormData(this);
        let croppedImagesProcessed = 0;
        const totalCroppedImages = Object.keys(croppers).length;
        
        const submitForm = () => {
            fetch(this.action, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Product updated successfully',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/admin/products';
                    });
                } else {
                    return response.json().then(data => {
                        throw new Error(data.message || 'Error updating product');
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while updating the product: ' + error.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        };
        
        if (totalCroppedImages === 0) {
            submitForm();
        } else {
            Object.keys(croppers).forEach(index => {
                croppers[index].getCroppedCanvas().toBlob((blob) => {
                    formData.set(`image${parseInt(index)+1}`, blob, `cropped-image-${parseInt(index)+1}.jpg`);
                    croppedImagesProcessed++;
                    if (croppedImagesProcessed === totalCroppedImages) {
                        submitForm();
                    }
                }, 'image/jpeg');
            });
        }
    });
</script>
<%- include("../../views/partials/admin/footer") %>


<!-- ne -->